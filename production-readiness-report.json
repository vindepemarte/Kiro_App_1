{
  "timestamp": "2025-07-21T02:04:52.326Z",
  "summary": {
    "passed": 23,
    "failed": 0,
    "warnings": 2,
    "successRate": 92
  },
  "details": [
    {
      "type": "pass",
      "message": "Monitoring file exists: lib/logger.ts"
    },
    {
      "type": "pass",
      "message": "Monitoring file exists: lib/performance-monitor.ts"
    },
    {
      "type": "pass",
      "message": "Monitoring file exists: lib/error-tracker.ts"
    },
    {
      "type": "pass",
      "message": "Monitoring file exists: lib/health-monitor.ts"
    },
    {
      "type": "pass",
      "message": "Monitoring file exists: components/production-monitor.tsx"
    },
    {
      "type": "pass",
      "message": "Monitoring file exists: app/api/health/route.ts"
    },
    {
      "type": "pass",
      "message": "Environment template exists"
    },
    {
      "type": "pass",
      "message": "Required dependency found: @radix-ui/react-tabs"
    },
    {
      "type": "warning",
      "message": "Optional dependency missing: @radix-ui/react-alert"
    },
    {
      "type": "pass",
      "message": "Required dependency found: lucide-react"
    },
    {
      "type": "pass",
      "message": "TypeScript configuration exists"
    },
    {
      "type": "pass",
      "message": "Strict TypeScript mode enabled"
    },
    {
      "type": "pass",
      "message": "Test file exists: lib/__tests__/production-monitoring.test.ts"
    },
    {
      "type": "pass",
      "message": "Next.js configuration exists"
    },
    {
      "type": "pass",
      "message": "Environment injection script exists"
    },
    {
      "type": "pass",
      "message": "Error handler integrated with monitoring"
    },
    {
      "type": "pass",
      "message": "Error handler imports monitoring services"
    },
    {
      "type": "pass",
      "message": "Health API endpoint exists"
    },
    {
      "type": "pass",
      "message": "Health endpoint supports GET and HEAD methods"
    },
    {
      "type": "pass",
      "message": "Production monitoring dashboard exists"
    },
    {
      "type": "pass",
      "message": "Monitoring dashboard includes health and performance data"
    },
    {
      "type": "pass",
      "message": "Firestore security rules exist"
    },
    {
      "type": "pass",
      "message": "No hardcoded sensitive data found in lib/config.ts"
    },
    {
      "type": "pass",
      "message": "No hardcoded sensitive data found in scripts/inject-env.js"
    },
    {
      "type": "warning",
      "message": "Consider adding performance optimizations to Next.js config"
    }
  ],
  "recommendations": []
}